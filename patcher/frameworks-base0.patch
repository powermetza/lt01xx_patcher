diff --git a/services/input/Android.mk b/services/input/Android.mk
index 2cfb31d71a..dd1bdb57a4 100644
--- a/services/input/Android.mk
+++ b/services/input/Android.mk
@@ -52,6 +52,10 @@ ifeq ($(BOARD_USE_LEGACY_TRACKPAD),true)
 LOCAL_CFLAGS += -DLEGACY_TRACKPAD
 endif
 
+ifeq ($(BOARD_HAS_EXTENDED_SWITCH),true)
+LOCAL_CFLAGS += -DEXTENDED_SWITCH
+endif
+
 LOCAL_MODULE_TAGS := optional
 
 include $(BUILD_SHARED_LIBRARY)
diff --git a/services/input/EventHub.h b/services/input/EventHub.h
index ae28f016f7..0fa1304eb1 100644
--- a/services/input/EventHub.h
+++ b/services/input/EventHub.h
@@ -57,6 +57,15 @@
 #define MSC_ANDROID_TIME_SEC 0x6
 #define MSC_ANDROID_TIME_USEC 0x7
 
+/*
+ * Override kernel header SW_MAX to prevent EventHub filter out
+ * extended switch event
+ */
+#ifdef EXTENDED_SWITCH
+#undef SW_MAX
+#define SW_MAX 0x20
+#endif
+
 namespace android {
 
 enum {
diff --git a/services/java/com/android/server/input/InputManagerService.java b/services/java/com/android/server/input/In
index aadec358f4..e12070b9e6 100644
--- a/services/java/com/android/server/input/InputManagerService.java
+++ b/services/java/com/android/server/input/InputManagerService.java
@@ -90,6 +90,8 @@ import java.util.HashSet;
 import libcore.io.Streams;
 import libcore.util.Objects;
 
+import android.os.SystemProperties;
+
 /*
  * Wraps the C++ InputManager and provides its callbacks.
  */
@@ -219,7 +221,9 @@ public class InputManagerService extends IInputManager.Stub
 
     // Switch code values must match bionic/libc/kernel/common/linux/input.h
     /** Switch code: Lid switch.  When set, lid is shut. */
-    public static final int SW_LID = 0x00;
+    public static final int SW_LID = SystemProperties.getInt("ro.switch_code.sw_lid", 0x00);
+    public static final boolean SW_LID_INVERT =
+            SystemProperties.getBoolean("ro.switch_code.sw_lid_invert", false);
 
     /** Switch code: Keypad slide.  When set, keyboard is exposed. */
     public static final int SW_KEYPAD_SLIDE = 0x0a;
@@ -1363,7 +1367,12 @@ public class InputManagerService extends IInputManager.Stub
         }
 
         if ((switchMask & SW_LID_BIT) != 0) {
-            final boolean lidOpen = ((switchValues & SW_LID_BIT) == 0);
+            final boolean lidOpen;
+            if (SW_LID_INVERT) {
+                lidOpen = ((switchValues & SW_LID_BIT) != 0);
+            } else {
+                lidOpen = ((switchValues & SW_LID_BIT) == 0);
+            }
             mWindowManagerCallbacks.notifyLidSwitchChanged(whenNanos, lidOpen);
         }
 
diff --git a/services/java/com/android/server/power/PowerManagerService.java b/services/java/com/android/server/power/Po
index 56a4096024..f81166f49e 100644
--- a/services/java/com/android/server/power/PowerManagerService.java
+++ b/services/java/com/android/server/power/PowerManagerService.java
@@ -592,6 +592,8 @@ public final class PowerManagerService extends IPowerManager.Stub
             updateSettingsLocked();
             mDirty |= DIRTY_BATTERY_STATE;
             updatePowerStateLocked();
+     
+        SystemProperties.set("sys.button.timeout", Integer.toString(mButtonTimeout / 1000));
         }
     }
 
@@ -1735,14 +1737,7 @@ public final class PowerManagerService extends IPowerManager.Stub
                         }
 
                         mKeyboardLight.setBrightness(mKeyboardVisible ? keyboardBrightness : 0);
-                        if (mButtonTimeout != 0 && now > mLastUserActivityTime + mButtonTimeout) {
-                            mButtonsLight.setBrightness(0);
-                        } else {
-                            mButtonsLight.setBrightness(buttonBrightness);
-                            if (buttonBrightness != 0 && mButtonTimeout != 0) {
-                                nextTimeout = now + mButtonTimeout;
-                            }
-                        }
+                        mButtonsLight.setBrightness(buttonBrightness);
                         mUserActivitySummary |= USER_ACTIVITY_SCREEN_BRIGHT;
                     } else {
                         nextTimeout = mLastUserActivityTime + screenOffTimeout;
diff --git a/services/java/com/android/server/wm/WindowManagerService.java b/services/java/com/android/server/wm/WindowM
index 02e7b53251..51495ddc24 100644
--- a/services/java/com/android/server/wm/WindowManagerService.java
+++ b/services/java/com/android/server/wm/WindowManagerService.java
@@ -5308,10 +5308,10 @@ public class WindowManagerService extends IWindowManager.Stub
                 InputManagerService.SW_LID);
         if (sw > 0) {
             // Switch state: AKEY_STATE_DOWN or AKEY_STATE_VIRTUAL.
-            return LID_CLOSED;
+           return InputManagerService.SW_LID_INVERT ? LID_OPEN : LID_CLOSED;
         } else if (sw == 0) {
             // Switch state: AKEY_STATE_UP.
-            return LID_OPEN;
+            return InputManagerService.SW_LID_INVERT ? LID_CLOSED : LID_OPEN;
         } else {
             // Switch state: AKEY_STATE_UNKNOWN.
             return LID_ABSENT;


